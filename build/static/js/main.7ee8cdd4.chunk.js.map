{"version":3,"sources":["components/Order.js","components/OrderDialog.js","components/Stock.js","components/StockDialog.js","components/Folio.js","components/SourceDialog.js","App.js","components/useInterval.js","reportWebVitals.js","index.js"],"names":["Order","props","order","onEdit","console","log","Fragment","TableRow","TableCell","quantity","buyDate","buyPrice","Box","display","justifyContent","alignItems","buyXR","paddingLeft","IconButton","aria-label","onClick","e","stopPropagation","Icon","OrderDialog","open","enableDelete","onClose","onSave","newOrder","onDelete","React","useState","setQuantity","dayjs","format","setBuyDate","setBuyPrice","setBuyXR","deleteEnabled","setDeleteEnabled","useEffect","handleChange","setter","event","target","value","Dialog","aria-labelledby","DialogTitle","id","DialogContent","noValidate","autoComplete","Grid","container","spacing","item","xs","TextField","variant","label","fullWidth","onChange","bind","type","DialogActions","width","visibility","Switch","checked","name","inputProps","Button","disabled","Object","assign","extend","relativeTime","useStyles","makeStyles","xSmallText","fontSize","xxSmallText","Stock","classes","stock","orders","quotes","xrs","baseCurrency","orderOpen","setOrderOpen","orderDialogOpen","setOrderDialogOpen","orderDialogDelete","setOrderDialogDelete","orderToEdit","setOrderToEdit","quote","ticker","tradeDate","price","lastUpdate","getQuote","symbol","xr","currency","xrDate","getXR","priceText","numbro","priceMantissa","lastIndexOf","length","handleOrderEdit","lots","totalBuyValue","buyTotalX","earliestBuyDate","orderArray","parseInt","parseFloat","push","nowTotalX","averagePrice","annualised","diff","hover","className","align","mantissa","fromNow","Tooltip","title","placement","arrow","thousandSeparated","output","style","paddingBottom","paddingTop","colSpan","Collapse","in","timeout","unmountOnExit","TableContainer","component","Paper","Table","TableBody","newStock","concat","reduce","accumulator","oldOrder","find","orderToDelete","filter","StockDialog","currencies","setName","setSymbol","setCurrency","toUpperCase","select","map","MenuItem","Folio","stockDialogOpen","setStockDialogOpen","stockDialogDelete","setStockDialogDelete","stockToEdit","setStockToEdit","folio","handleStockEdit","handleStockSave","newFolio","oldStock","StockArray","stockToDelete","SourceDialog","source","helperText","setHelperText","text","setText","JSON","stringify","DialogContentText","error","margin","multiline","newText","parse","err","message","color","newSource","LS_KEYS","INIT_CURRENCIES","INIT_QUOTES","Number","MAX_SAFE_INTEGER","INIT_XRS","INIT_FOLIOS","UPDATE_DURATION","handleLocalStorage","key","obj","initial","thing","keys","isEmpty","stored","window","localStorage","getItem","setItem","itemGetter","newObj","App","folios","setFolios","setBaseCurrency","setCurrencies","avKey","setAVKey","setQuotes","setXRs","ticks","setTicks","callback","delay","savedCallback","useRef","current","setInterval","clearInterval","useInterval","updateFired","Date","now","fetchQuote","fetchXR","endsWith","fetchSGXSecuritiesPrices","fetchAVQuote","fetch","then","res","json","newQuotes","securities","lookup","replace","sgxQuote","data","prices","elem","nc","ltd","trading_time","slice","lt","entries","targetCurrency","newXRs","toISOString","setSource","sourceOpen","setSourceOpen","handleFolioChange","folioIndex","newFolios","index","folioArray","this","Container","whiteSpace","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.7ee8cdd4.chunk.js","sourcesContent":["import React from \"react\";\r\n// import numbro from \"numbro\";\r\nimport dayjs from 'dayjs';\r\n\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Box from '@material-ui/core/Box';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Icon from '@material-ui/core/Icon';\r\n\r\nfunction tableHeaders() {\r\n\tconst headers = [\"name\", \"symbol\", \"buyDate\", \"quantity\", \"currency\", \"buyPrice\",\r\n\t\t\"buyXR\", \"buyTotalX\", \"tradeDate\", \"price\", \"XRDate\", \"XR\", \"nowTotalX\",\r\n\t\t\"profit\", \"annualised\", \"\"];\r\n\treturn headers.map(item => <TableCell key={item}>{item}</TableCell>);\r\n}\r\n\r\nfunction getQuote(ticker, quotes) {\r\n\treturn typeof quotes[ticker] !== \"undefined\" ?\r\n\t\tquotes[ticker] : { tradeDate: \"\", price: 0, lastUpdate: 0 }\r\n\r\n}\r\n\r\nfunction getXR(currency, xrs) {\r\n\treturn typeof xrs[currency] !== \"undefined\" ?\r\n\t\txrs[currency] : { xrDate: \"\", xr: 0, lastUpdate: 0 }\r\n}\r\n\r\nexport default function Order(props) {\r\n\tconst order = props.order;\r\n\tconst onEdit = props.onEdit || ((order) => { console.log(\"onEdit\", order); });\r\n\r\n\tconst handleEdit = (e) => {\r\n\t\tonEdit(order);\r\n\t\te.stopPropagation();\r\n\t}\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<TableRow>\r\n\t\t\t\t<TableCell>{order.quantity}</TableCell>\r\n\t\t\t\t<TableCell>{order.buyDate}</TableCell>\r\n\t\t\t\t<TableCell>{order.buyPrice}</TableCell>\r\n\t\t\t\t<TableCell>\r\n\t\t\t\t\t<Box display=\"flex\" justifyContent=\"flex-end\" alignItems=\"center\">\r\n\t\t\t\t\t\t<Box>\r\n\t\t\t\t\t\t\t{order.buyXR}\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t<Box paddingLeft={2}>\r\n\t\t\t\t\t\t\t<IconButton aria-label=\"edit stock\" onClick={handleEdit}><Icon>edit</Icon></IconButton>\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</TableCell>\r\n\t\t\t</TableRow>\r\n\t\t</React.Fragment>\r\n\t)\r\n}","import React from \"react\";\r\nimport dayjs from 'dayjs';\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport Switch from '@material-ui/core/Switch';\r\n\r\n// { \r\n//     id: 1, \r\n//     quantity: 10, \r\n//     buyDate: \"2019-01-01\", \r\n//     buyPrice: 1000, \r\n//     buyXR: 1 \r\n// }\r\n\r\nexport default function OrderDialog(props) {\r\n    const { order, open, enableDelete } = props;\r\n    const onClose = props.onClose || (() => { console.log(\"onClose\") });\r\n    const onSave = props.onSave || ((newOrder) => { console.log(\"onSave\", newOrder) });\r\n    const onDelete = props.onDelete || ((order) => { console.log(\"onDelete\", order) });\r\n    \r\n    const [quantity, setQuantity] = React.useState(0);\r\n    const [buyDate, setBuyDate] = React.useState(dayjs().format(\"YYYY-MM-DD\"));\r\n    const [buyPrice, setBuyPrice] = React.useState(0);\r\n    const [buyXR, setBuyXR] = React.useState(1);\r\n    const [deleteEnabled, setDeleteEnabled] = React.useState(false);\r\n\r\n    React.useEffect(() => {\r\n        //console.log(order);\r\n        setQuantity(order.quantity || 0);\r\n        setBuyDate(order.buyDate || dayjs().format(\"YYYY-MM-DD\"));\r\n        setBuyPrice(order.buyPrice || 0);\r\n        setBuyXR(order.buyXR || 1);\r\n    }, [order]);\r\n\r\n    const handleSave = () => {\r\n        const newOrder = Object.assign({}, order, { quantity, buyDate, buyPrice, buyXR });\r\n        onSave(newOrder);\r\n    };\r\n\r\n    const toggleDelete = () => {\r\n        setDeleteEnabled(!deleteEnabled)\r\n    }\r\n\r\n    const handleDelete = () => {\r\n        onDelete(order);\r\n        setDeleteEnabled(false);\r\n    }\r\n\r\n    const handleChange = (setter, event) => {\r\n        const newText = event.target.value;\r\n        setter(newText);\r\n    };\r\n\r\n    return (\r\n        <Dialog open={open} onClose={onClose} aria-labelledby=\"form-dialog-title\">\r\n            <DialogTitle id=\"form-dialog-title\">\r\n                Order\r\n            </DialogTitle>\r\n            <DialogContent>\r\n                {/* <DialogContentText></DialogContentText> */}\r\n                <form noValidate autoComplete=\"off\">\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12}>\r\n                            <TextField variant=\"filled\" label=\"Quantity\" value={quantity} fullWidth\r\n                                onChange={handleChange.bind(null, setQuantity)} />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField variant=\"filled\" label=\"Buy Date\" value={buyDate} fullWidth type=\"date\"\r\n                                onChange={handleChange.bind(null, setBuyDate)} />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField variant=\"filled\" label=\"Buy Price\" value={buyPrice} fullWidth\r\n                                onChange={handleChange.bind(null, setBuyPrice)} />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField variant=\"filled\" label=\"Buy XR\" value={buyXR} fullWidth\r\n                                onChange={handleChange.bind(null, setBuyXR)} />\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Box display=\"flex\" justifyContent=\"space-between\" width=\"100%\">\r\n                    <Box visibility={enableDelete ? \"visible\" : \"hidden\"}>\r\n                        <Switch\r\n                            checked={deleteEnabled}\r\n                            onChange={toggleDelete}\r\n                            name=\"checkedDelete\"\r\n                            inputProps={{ 'aria-label': 'deletion enabling checkbox' }}\r\n                        />\r\n                        <Button onClick={handleDelete} disabled={!deleteEnabled}>Delete</Button>\r\n                    </Box>\r\n                    <Box display=\"flex\">\r\n                        <Box visibility={enableDelete ? \"visible\" : \"hidden\"}><Button onClick={onClose}>Cancel</Button></Box>\r\n                        <Box><Button onClick={handleSave}>Save</Button></Box>\r\n                    </Box>\r\n                </Box>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\n","import React from \"react\";\r\nimport numbro from \"numbro\";\r\nimport dayjs from 'dayjs';\r\nimport relativeTime from 'dayjs/plugin/relativeTime';\r\n\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Collapse from '@material-ui/core/Collapse';\r\n\r\nimport Order from \"./Order\";\r\nimport OrderDialog from \"./OrderDialog\";\r\n\r\ndayjs.extend(relativeTime);\r\n\r\nconst useStyles = makeStyles({\r\n\txSmallText: {\r\n\t\tfontSize: \"x-small\",\r\n\t},\r\n\txxSmallText: {\r\n\t\tfontSize: \"xx-small\",\r\n\t},\r\n});\r\n\r\n// function tableHeaders() {\r\n// \tconst headers = [\"name\", \"symbol\", \"buyDate\", \"quantity\", \"currency\", \"buyPrice\",\r\n// \t\t\"buyXR\", \"buyTotalX\", \"tradeDate\", \"price\", \"XRDate\", \"XR\", \"nowTotalX\",\r\n// \t\t\"profit\", \"annualised\", \"\"];\r\n// \treturn headers.map(item => <TableCell key={item}>{item}</TableCell>);\r\n// }\r\n\r\nfunction getQuote(ticker, quotes) {\r\n\treturn typeof quotes[ticker] !== \"undefined\" ?\r\n\t\tquotes[ticker] : { tradeDate: \"\", price: 0, lastUpdate: 0 }\r\n\r\n}\r\n\r\nfunction getXR(currency, xrs) {\r\n\treturn typeof xrs[currency] !== \"undefined\" ?\r\n\t\txrs[currency] : { xrDate: \"\", xr: 0, lastUpdate: 0 }\r\n}\r\n\r\nexport default function Stock(props) {\r\n\tconst classes = useStyles();\r\n\tconst stock = props.stock;\r\n\tstock.orders = stock.orders || [];\r\n\tconst quotes = props.quotes || {};\r\n\tconst xrs = props.xrs || {};\r\n\tconst baseCurrency = props.baseCurrency || \"SGD\";\r\n\tconst onEdit = props.onEdit || ((stock) => { console.log(\"onEdit\", stock); });\r\n\tconst onChange = props.onChange || ((stock) => { console.log(\"onChange\", stock); });\r\n\r\n\tconst [orderOpen, setOrderOpen] = React.useState(false);\r\n\tconst [orderDialogOpen, setOrderDialogOpen] = React.useState(false);\r\n\tconst [orderDialogDelete, setOrderDialogDelete] = React.useState(false);\r\n\tconst [orderToEdit, setOrderToEdit] = React.useState({});\r\n\r\n\tconst quote = getQuote(stock.symbol, quotes);\r\n\tconst tradeDate = dayjs(quote.tradeDate)\r\n\tconst price = quote.price;\r\n\tconst xr = getXR(stock.currency, xrs);\r\n\t// const xrDate = new Date(xr.xrDate);\r\n\tconst xrDate = dayjs(xr.xrDate);\r\n\tconst priceText = numbro(price).format();\r\n\tconst priceMantissa = priceText.lastIndexOf(\".\") === -1 ? 0 : priceText.length - priceText.lastIndexOf(\".\") - 1;\r\n\r\n\t// const data = props.data || [];\r\n\r\n\t// const onEdit = props.onEdit || ((id) => {\r\n\t// \tconsole.log(\"edit\",id);\r\n\t// });\r\n\r\n\t// const onAdd = props.onAdd || ((id) => {\r\n\t// \tconsole.log(\"add\",id);\r\n\t// });\r\n\r\n\tconst handleEdit = (e) => {\r\n\t\tonEdit(stock);\r\n\t\te.stopPropagation();\r\n\t}\r\n\r\n\t// const handleAdd = () => {\r\n\t// \tonAdd(index);\r\n\t// }\r\n\r\n\tconst handleOrderEdit = (order) => {\r\n\t\tsetOrderToEdit(order);\r\n\t\tsetOrderDialogDelete(true);\r\n\t\tsetOrderDialogOpen(true);\r\n\t}\r\n\r\n\tconst handleOrderAdd = () => {\r\n\t\tsetOrderToEdit({});\r\n\t\tsetOrderDialogDelete(false);\r\n\t\tsetOrderDialogOpen(true);\r\n\t}\r\n\r\n\tconst handleOrderDelete = (orderToDelete) => {\r\n\t\tconst newStock = Object.assign(stock);\r\n\t\tnewStock.orders = newStock.orders.filter(order => order.id !== orderToDelete.id);\r\n\t\tonChange(newStock);\r\n\t\tsetOrderDialogOpen(false);\r\n\t}\r\n\r\n\tconst handleOrderSave = (newOrder) => {\r\n\t\tconst newStock = Object.assign(stock);\r\n\t\tnewStock.orders = newStock.orders.concat();\r\n\t\tif (typeof newOrder.id === \"undefined\") {\r\n\t\t\tnewOrder.id = newStock.orders.reduce((accumulator, order) => {\r\n\t\t\t\treturn order.id > accumulator ? order.id : accumulator\r\n\t\t\t}, 0) + 1;\r\n\t\t}\r\n\t\tconst oldOrder = newStock.orders.find(order => order.id == newOrder.id)\r\n\t\tif (typeof oldOrder === \"undefined\") {\r\n\t\t\tnewStock.orders.push(newOrder);\r\n\t\t} else {\r\n\t\t\tObject.assign(oldOrder, newOrder);\r\n\t\t}\r\n\t\tonChange(newStock);\r\n\t\tsetOrderDialogOpen(false)\r\n\t}\r\n\r\n\tlet lots = 0, totalBuyValue = 0, buyTotalX = 0, earliestBuyDate = dayjs();\r\n\tconst orderArray = [];\r\n\tfor (const order of stock.orders) {\r\n\t\tlet quantity = parseInt(order.quantity);\r\n\t\tlet buyPrice = parseFloat(order.buyPrice);\r\n\t\tlet buyXR = parseFloat(order.buyXR);\r\n\t\tlet buyDate = dayjs(order.buyDate);\r\n\t\tif (buyDate < earliestBuyDate) { earliestBuyDate = buyDate }\r\n\t\tlots += quantity;\r\n\t\ttotalBuyValue += quantity * buyPrice;\r\n\t\tbuyTotalX += quantity * buyPrice * buyXR;\r\n\t\torderArray.push(\r\n\t\t\t<Order key={order.id} order={order} onEdit={handleOrderEdit} />\r\n\t\t)\r\n\t}\r\n\tconst nowTotal = price * lots;\r\n\tconst nowTotalX = nowTotal * xr.xr;\r\n\tconst averagePrice = totalBuyValue / lots;\r\n\tconst ytd = dayjs().diff(earliestBuyDate, \"years\", true);\r\n\tconst annualised = ((nowTotalX - buyTotalX) / buyTotalX / ytd);\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<TableRow hover onClick={() => setOrderOpen(!orderOpen)}>\r\n\t\t\t\t<TableCell>\r\n\t\t\t\t\t{stock.name}<br />\r\n\t\t\t\t\t<span className={classes.xSmallText}>{stock.symbol}</span>\r\n\t\t\t\t</TableCell>\r\n\t\t\t\t<TableCell align=\"right\">\r\n\t\t\t\t\t{lots}<br />\r\n\t\t\t\t</TableCell>\r\n\t\t\t\t<TableCell align=\"right\">\r\n\t\t\t\t\t{stock.currency} {numbro(averagePrice).format({ mantissa: priceMantissa })}\r\n\t\t\t\t</TableCell>\r\n\t\t\t\t<TableCell align=\"right\">\r\n\t\t\t\t\t{stock.currency} {numbro(price).format()}<br />\r\n\t\t\t\t\t<span className={classes.xSmallText}>{tradeDate.fromNow()}</span>\r\n\t\t\t\t</TableCell>\r\n\t\t\t\t<TableCell align=\"right\">\r\n\t\t\t\t\t<Box display=\"flex\" justifyContent=\"flex-end\" alignItems=\"center\">\r\n\t\t\t\t\t\t<Box>\r\n\t\t\t\t\t\t\t<Tooltip title={\r\n\t\t\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t\t\t1 {stock.currency} = {numbro(xr.xr).format()} {baseCurrency}<br />\r\n\t\t\t\t\t\t\t\t\t<span className={classes.xxSmallText}>{xrDate.fromNow()}</span>\r\n\t\t\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t\t} placement=\"top\" arrow>\r\n\t\t\t\t\t\t\t\t<span>{baseCurrency} {numbro(nowTotalX).format({ mantissa: 2, thousandSeparated: true })}</span>\r\n\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t<br /><span className={classes.xSmallText}>\r\n\t\t\t\t\t\t\t\t{/* {numbro(buyTotalX).format({ mantissa: 2, thousandSeparated: true })} */}\r\n\t\t\t\t\t\t\t\t{numbro(annualised).format({ output: \"percent\", mantissa: 2 })} pa\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t<Box paddingLeft={2}>\r\n\t\t\t\t\t\t\t<IconButton aria-label=\"edit stock\" onClick={handleEdit}><Icon>edit</Icon></IconButton>\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</TableCell>\r\n\t\t\t\t{/* <TableCell>\r\n\t\t\t\t\t<IconButton aria-label=\"expand row\" size=\"small\" onClick={() => setOrderOpen(!orderOpen)}>\r\n\t\t\t\t\t\t{orderOpen ? <Icon>keyboard_arrow_up</Icon> : <Icon>keyboard_arrow_down</Icon>}\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t</TableCell> */}\r\n\t\t\t</TableRow>\r\n\t\t\t<TableRow>\r\n\t\t\t\t<TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\r\n\t\t\t\t\t<Collapse in={orderOpen} timeout=\"auto\" unmountOnExit>\r\n\t\t\t\t\t\t<Button onClick={handleOrderAdd}>Add New Order</Button>\r\n\t\t\t\t\t\t<TableContainer component={Paper}>\r\n\t\t\t\t\t\t\t<Table>\r\n\t\t\t\t\t\t\t\t<TableBody>\r\n\t\t\t\t\t\t\t\t\t{orderArray}\r\n\t\t\t\t\t\t\t\t</TableBody>\r\n\t\t\t\t\t\t\t</Table>\r\n\t\t\t\t\t\t</TableContainer>\r\n\t\t\t\t\t</Collapse>\r\n\t\t\t\t</TableCell>\r\n\t\t\t</TableRow>\r\n\t\t\t{/* <Button onClick={handleAdd}>Add New Row</Button>\r\n\t\t\t<TableContainer component={Paper}>\r\n\t\t\t\t<Table>\r\n\t\t\t\t\t<TableHead>\r\n\t\t\t\t\t\t<TableRow>\r\n\t\t\t\t\t\t\t{tableHeaders()}\r\n\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t</TableHead>\r\n\t\t\t\t\t<TableBody>\r\n\t\t\t\t\t\t{rows.map((row) => (\r\n\t\t\t\t\t\t\t<TableRow key={row.id}>\r\n\t\t\t\t\t\t\t\t<TableCell component=\"th\" scope=\"row\">\r\n\t\t\t\t\t\t\t\t\t{row.name}\r\n\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t<TableCell align=\"right\">{row.symbol}</TableCell>\r\n\t\t\t\t\t\t\t\t<TableCell align=\"right\">{row.buyDate.toLocaleDateString()}</TableCell>\r\n\t\t\t\t\t\t\t\t<TableCell align=\"right\">{row.quantity}</TableCell>\r\n\t\t\t\t\t\t\t\t<TableCell align=\"right\">{row.currency}</TableCell>\r\n\t\t\t\t\t\t\t\t<TableCell align=\"right\">{row.buyPrice}</TableCell>\r\n\t\t\t\t\t\t\t\t<TableCell align=\"right\">{row.buyXR}</TableCell>\r\n\t\t\t\t\t\t\t\t<TableCell align=\"right\">{numbro(row.buyTotalX).format({ mantissa: 2, thousandSeparated: true })}</TableCell>\r\n\t\t\t\t\t\t\t\t<TableCell align=\"right\">{row.tradeDate.toLocaleDateString()}</TableCell>\r\n\t\t\t\t\t\t\t\t<TableCell align=\"right\">{numbro(row.price).format()}</TableCell>\r\n\t\t\t\t\t\t\t\t<TableCell align=\"right\">{row.xrDate.toLocaleDateString()}</TableCell>\r\n\t\t\t\t\t\t\t\t<TableCell align=\"right\">{numbro(row.xr).format()}</TableCell>\r\n\t\t\t\t\t\t\t\t<TableCell align=\"right\">{numbro(row.nowTotalX).format({ mantissa: 2, thousandSeparated: true })}</TableCell>\r\n\t\t\t\t\t\t\t\t<TableCell align=\"right\">{numbro(row.profit).format({ mantissa: 2, thousandSeparated: true })}</TableCell>\r\n\t\t\t\t\t\t\t\t<TableCell align=\"right\">{numbro(row.annualised).format({output:\"percent\", mantissa:2})}</TableCell>\r\n\t\t\t\t\t\t\t\t<TableCell><IconButton onClick={handleEdit.bind(null,row.id)}><Icon>edit</Icon></IconButton></TableCell>\r\n\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</TableBody>\r\n\t\t\t\t</Table>\r\n\t\t\t</TableContainer> */}\r\n\t\t\t<OrderDialog open={orderDialogOpen} onClose={() => setOrderDialogOpen(false)}\r\n\t\t\t\torder={orderToEdit} onSave={handleOrderSave}\r\n\t\t\t\tonDelete={handleOrderDelete} enableDelete={orderDialogDelete} />\r\n\t\t</React.Fragment>\r\n\t)\r\n}","import React from \"react\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport Switch from '@material-ui/core/Switch';\r\n\r\nexport default function StockDialog(props) {\r\n    const { stock, open, enableDelete } = props;\r\n    const currencies = props.currencies || [\"SGD\", \"USD\", \"JPY\"];\r\n    const onClose = props.onClose || (() => { console.log(\"onClose\") });\r\n    const onSave = props.onSave || ((newStock) => { console.log(\"onSave\", newStock) });\r\n    const onDelete = props.onDelete || ((stock) => { console.log(\"onDelete\", stock) });\r\n\r\n    const [name, setName] = React.useState(\"\");\r\n    const [symbol, setSymbol] = React.useState(\"\");\r\n    const [currency, setCurrency] = React.useState(\"\");\r\n    const [deleteEnabled, setDeleteEnabled] = React.useState(false);\r\n\r\n    React.useEffect(() => {\r\n        //console.log(stock);\r\n        setName(stock.name || \"\");\r\n        setSymbol(stock.symbol || \"\");\r\n        setCurrency(stock.currency || currencies[0]);\r\n    }, [stock]);\r\n\r\n    const handleSave = () => {\r\n        const newStock = Object.assign({}, stock, { name, symbol, currency });\r\n        onSave(newStock);\r\n    };\r\n\r\n    const toggleDelete = () => {\r\n        setDeleteEnabled(!deleteEnabled)\r\n    }\r\n\r\n    const handleDelete = () => {\r\n        onDelete(stock);\r\n        setDeleteEnabled(false);\r\n    }\r\n\r\n    const handleChange = (setter, event) => {\r\n        const newText = event.target.value;\r\n        setter(newText);\r\n    };\r\n\r\n    const setSymbolToUpperCase = (value) => {\r\n        setSymbol(value.toUpperCase());\r\n    }\r\n\r\n    return (\r\n        <Dialog open={open} onClose={onClose} aria-labelledby=\"form-dialog-title\">\r\n            <DialogTitle id=\"form-dialog-title\">\r\n                Stock\r\n            </DialogTitle>\r\n            <DialogContent>\r\n                {/* <DialogContentText></DialogContentText> */}\r\n                <form noValidate autoComplete=\"off\">\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12}>\r\n                            <TextField variant=\"filled\" label=\"Name\" value={name} fullWidth\r\n                                onChange={handleChange.bind(null, setName)} />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField variant=\"filled\" label=\"Symbol\" value={symbol} fullWidth\r\n                                onChange={handleChange.bind(null, setSymbolToUpperCase)} />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField variant=\"filled\" label=\"Currency\" value={currency} fullWidth\r\n                                onChange={handleChange.bind(null, setCurrency)} select>\r\n                                {currencies.map((item) => {\r\n                                    return (\r\n                                        <MenuItem key={item} value={item}>{item}</MenuItem>\r\n                                    )\r\n                                })}\r\n                            </TextField>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Box display=\"flex\" justifyContent=\"space-between\" width=\"100%\">\r\n                    <Box visibility={enableDelete ? \"visible\" : \"hidden\"}>\r\n                        <Switch\r\n                            checked={deleteEnabled}\r\n                            onChange={toggleDelete}\r\n                            name=\"checkedDelete\"\r\n                            inputProps={{ 'aria-label': 'deletion enabling checkbox' }}\r\n                        />\r\n                        <Button onClick={handleDelete} disabled={!deleteEnabled}>Delete</Button>\r\n                    </Box>\r\n                    <Box display=\"flex\">\r\n                        <Box visibility={enableDelete ? \"visible\" : \"hidden\"}><Button onClick={onClose}>Cancel</Button></Box>\r\n                        <Box><Button onClick={handleSave}>Save</Button></Box>\r\n                    </Box>\r\n                </Box>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\n","import React from \"react\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport Stock from \"./Stock\";\r\nimport StockDialog from \"./StockDialog\";\r\n\r\nexport default function Folio(props) {\r\n\tconst [stockDialogOpen, setStockDialogOpen] = React.useState(false);\r\n\tconst [stockDialogDelete, setStockDialogDelete] = React.useState(false);\r\n\tconst [stockToEdit, setStockToEdit] = React.useState({});\r\n\tconst folio = props.folio || [];\r\n\tconst quotes = props.quotes || {};\r\n\tconst xrs = props.xrs || {};\r\n\tconst baseCurrency = props.baseCurrency || \"SGD\";\r\n\tconst currencies = props.currencies || [\"SGD\", \"USD\", \"JPY\"];\r\n\tconst onChange = props.onChange || ((folio) => { console.log(\"onChange\", folio); });\r\n\r\n\tconst handleStockAdd = () => {\r\n\t\tsetStockToEdit({});\r\n\t\tsetStockDialogDelete(false);\r\n\t\tsetStockDialogOpen(true);\r\n\t}\r\n\r\n\tconst handleStockEdit = (stock) => {\r\n\t\tsetStockToEdit(stock);\r\n\t\tif (typeof stock.orders !== \"undefined\" && stock.orders.length === 0) {\r\n\t\t\tsetStockDialogDelete(true);\r\n\t\t} else {\r\n\t\t\tsetStockDialogDelete(false);\r\n\t\t}\r\n\t\tsetStockDialogOpen(true);\r\n\t}\r\n\r\n\tconst handleStockDelete = (stockToDelete) => {\r\n\t\tconst newFolio = folio.filter(stock => stock.id !== stockToDelete.id);\r\n\t\tonChange(newFolio);\r\n\t\tsetStockDialogOpen(false);\r\n\t}\r\n\r\n\tconst handleStockSave = (newStock) => {\r\n\t\tconst newFolio = folio.concat();\r\n\t\tif(typeof newStock.id === \"undefined\"){\r\n\t\t\tnewStock.id = newFolio.reduce((accumulator, stock) => {\r\n\t\t\t\treturn stock.id > accumulator ? stock.id : accumulator\r\n\t\t\t}, 0) + 1;\r\n\t\t}\r\n\t\tconst oldStock = newFolio.find(stock => stock.id == newStock.id)\r\n\t\tif (typeof oldStock === \"undefined\") {\t\r\n\t\t\tnewFolio.push(newStock);\r\n\t\t} else {\r\n\t\t\tObject.assign(oldStock, newStock);\r\n\t\t}\r\n\t\tonChange(newFolio);\r\n\t\tsetStockDialogOpen(false)\r\n\t}\r\n\r\n\tconst StockArray = [];\r\n\tfor (const stock of folio) {\r\n\t\tStockArray.push(<Stock key={stock.id} stock={stock} quotes={quotes}\r\n\t\t\txrs={xrs} baseCurrency={baseCurrency} onEdit={handleStockEdit} onChange={handleStockSave} />)\r\n\t}\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<Button onClick={handleStockAdd}>Add New Stock</Button>\r\n\t\t\t<StockDialog open={stockDialogOpen} onClose={() => setStockDialogOpen(false)}\r\n\t\t\t\tstock={stockToEdit} currencies={currencies}\r\n\t\t\t\tonSave={handleStockSave} onDelete={handleStockDelete}\r\n\t\t\t\tenableDelete={stockDialogDelete} />\r\n\t\t\t<TableContainer component={Paper}>\r\n\t\t\t\t<Table>\r\n\t\t\t\t\t<TableBody>\r\n\t\t\t\t\t\t{StockArray}\r\n\t\t\t\t\t</TableBody>\r\n\t\t\t\t</Table>\r\n\t\t\t</TableContainer>\r\n\t\t</React.Fragment>\r\n\t)\r\n}","import React from \"react\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Box from '@material-ui/core/Box';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Icon from '@material-ui/core/Icon';\r\n\r\nexport default function SourceDialog(props) {\r\n    const { source, open, onClose, onSave } = props;\r\n    const [helperText, setHelperText] = React.useState(\"\");\r\n    const [text, setText] = React.useState(\"\");\r\n\r\n    React.useEffect(() => {\r\n        setText(JSON.stringify(source, null, \"\\t\"))\r\n    }, [source]);\r\n\r\n    const handleCopy = () => {\r\n\r\n    };\r\n\r\n    const handleSaveToFile = () => {\r\n\r\n    };\r\n\r\n    const handleSave = () => {\r\n        try {\r\n            const newSource = JSON.parse(text);\r\n            onSave(newSource);\r\n        } catch (err) {\r\n            setHelperText(err.message)\r\n        }\r\n    };\r\n\r\n    const handleChange = (event) => {\r\n        const newText = event.target.value;\r\n        setText(newText);\r\n        try {\r\n            JSON.parse(newText);\r\n            setHelperText(\"\")\r\n        } catch (err) {\r\n            setHelperText(err.message)\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Dialog open={open} onClose={onClose} aria-labelledby=\"form-dialog-title\">\r\n            <DialogTitle id=\"form-dialog-title\">\r\n                {/* <Box position=\"absolute\" right=\"16px\" top=\"8px\" zIndex={1350}>\r\n                    <IconButton onClick={handleSaveToFile}>\r\n                        <Icon>save</Icon>\r\n                    </IconButton>\r\n                    <IconButton onClick={handleCopy}>\r\n                        <Icon>content_copy</Icon>\r\n                    </IconButton>\r\n                </Box> */}\r\n                JSON\r\n            </DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText>\r\n                    This is provided as a means to quickly import your portfolio or to make backups.\r\n                    Editing the JSON directly is not recommended.\r\n       \t\t\t</DialogContentText>\r\n                <TextField\r\n                    variant=\"filled\"\r\n                    error={helperText!==\"\"}\r\n                    helperText={helperText}\r\n                    margin=\"dense\"\r\n                    id=\"portfolioText\"\r\n                    label=\"JSON\"\r\n                    fullWidth\r\n                    multiline\r\n                    value={text}\r\n                    onChange={handleChange}\r\n                />\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={onClose} color=\"primary\">\r\n                    Cancel\r\n          \t\t\t</Button>\r\n                <Button onClick={handleSave} color=\"primary\">\r\n                    Save\r\n          \t\t\t</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\n","import React from \"react\";\n\nimport Button from \"@material-ui/core/Button\";\nimport Container from \"@material-ui/core/Container\";\n\nimport useInterval from \"./components/useInterval\";\n// import Portfolio from \"./components/Portfolio\";\nimport Folio from \"./components/Folio\";\nimport SourceDialog from \"./components/SourceDialog\";\n// import StockDialog from \"./components/StockDialog\";\n\nconst LS_KEYS = {\n\t// PORTFOLIOS: \"portfolios\",\n\tFOLIOS: \"folios\",\n\tBASE_CURRENCY: \"baseCurrency\",\n\tCURRENCIES: \"currencies\",\n\tAV_KEY: \"avKey\",\n\tQUOTES: \"quotes\",\n\tXRS: \"xrs\",\n}\n// const INIT_PORTFOLIOS = [[{ id: 1, name: \"Google\", symbol: \"GOOG\", currency: \"USD\", quantity: 1, buyPrice: 100, buyXR: 1, buyDate: \"2021-02-13\" }]];\nconst INIT_BASE_CURRENCY = \"SGD\";\nconst INIT_CURRENCIES = [\"SGD\", \"USD\", \"JPY\"];\nconst INIT_QUOTES = { \"\": { tradeDate: \"\", price: 0, lastUpdate: Number.MAX_SAFE_INTEGER } };\nconst INIT_XRS = { \"\": { xrDate: \"\", xr: 0, lastUpdate: Number.MAX_SAFE_INTEGER } };\n// const INIT_FOLIOS = [[{ id: 1, name: \"Google\", symbol: \"GOOGL\", currency: \"USD\", orders: [{ id: 1, quantity: 10, buyDate: \"2019-01-01\", buyPrice: 1000, buyXR: 1 }] }]];\nconst INIT_FOLIOS = [[]];\nconst UPDATE_DURATION = 1000 * 60 * 60 // update tickers every hour\n\nfunction isEmpty(thing) {\n\tconst thingType = typeof thing;\n\tswitch (thingType) {\n\t\tcase \"undefined\":\n\t\t\treturn true;\n\t\tcase \"string\":\n\t\t\treturn thing === \"\";\n\t\tcase \"object\":\n\t\t\tif (thing === null) {\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\tif (Object.keys(thing).length === 0) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tbreak;\n\t}\n\treturn false;\n}\n\nfunction handleLocalStorage(key, obj, setter, initial) {\n\tif (isEmpty(obj)) {\n\t\tconst stored = window.localStorage.getItem(key);\n\t\tif (stored !== null) {\n\t\t\tsetter(JSON.parse(stored));\n\t\t} else {\n\t\t\tsetter(initial);\n\t\t}\n\t} else {\n\t\twindow.localStorage.setItem(key, JSON.stringify(obj));\n\t}\n}\n\nfunction itemGetter(obj, setter, initial) {\n\treturn (key) => {\n\t\tif (typeof obj[key] !== \"undefined\") {\n\t\t\treturn obj[key];\n\t\t} else {\n\t\t\tconst newObj = Object.assign({}, obj)\n\t\t\tnewObj[key] = initial\n\t\t\tsetter(newObj);\n\t\t\treturn newObj[key];\n\t\t}\n\t}\n}\n\n// function convertPortfolios(portfolios) {\n// \t// {\n// \t// \t\"name\": \"OCBC\",\n// \t// \t\"symbol\": \"O39.SI\",\n// \t// \t\"currency\": \"SGD\",\n// \t// \t\"orders\":[\n// \t// \t\t{\n// \t// \t\t\t\"quantity\": 2000,\n// \t// \t\t\t\"buyDate\": \"2018-02-22\",\n// \t// \t\t\t\"buyPrice\": 12.98,\n// \t// \t\t\t\"buyXR\": 1,\n// \t// \t\t\t\"id\": 0\n// \t// \t\t}\n// \t// \t]\n// \t// },\n\n// \tconst folios = [];\n// \tfor (const portfolio of portfolios) {\n// \t\tconst folio = [];\n// \t\tfolios.push(folio)\n// \t\tfor (const stock of portfolio) {\n// \t\t\tlet folioItem = folio.find(folioItem => folioItem.symbol == stock.symbol)\n// \t\t\tif (typeof folioItem == \"undefined\") {\n// \t\t\t\tfolioItem = {\n// \t\t\t\t\tname: stock.name,\n// \t\t\t\t\tsymbol: stock.symbol,\n// \t\t\t\t\tcurrency: stock.currency,\n// \t\t\t\t\torders: []\n// \t\t\t\t}\n// \t\t\t\tfolio.push(folioItem);\n// \t\t\t}\n// \t\t\tfolioItem.orders.push({\n// \t\t\t\tid: stock.id,\n// \t\t\t\tquantity: stock.quantity,\n// \t\t\t\tbuyDate: stock.buyDate,\n// \t\t\t\tbuyPrice: stock.buyPrice,\n// \t\t\t\tbuyXR: stock.buyXR\n// \t\t\t})\n// \t\t}\n// \t}\n// \treturn folios;\n// }\n\nexport default function App() {\n\tconst [folios, setFolios] = React.useState([]);\n\t// const [portfolios, setPortfolios] = React.useState([]);\n\tconst [baseCurrency, setBaseCurrency] = React.useState(\"\");\n\tconst [currencies, setCurrencies] = React.useState([]);\n\tconst [avKey, setAVKey] = React.useState(\"\");\n\tconst [quotes, setQuotes] = React.useState({});\n\tconst [xrs, setXRs] = React.useState({});\n\n\tReact.useEffect(() => {\n\t\t// handleLocalStorage(LS_KEYS.PORTFOLIOS, portfolios, setPortfolios, INIT_PORTFOLIOS);\n\t\thandleLocalStorage(LS_KEYS.BASE_CURRENCY, baseCurrency, setBaseCurrency, INIT_BASE_CURRENCY);\n\t\thandleLocalStorage(LS_KEYS.CURRENCIES, currencies, setCurrencies, INIT_CURRENCIES);\n\t\thandleLocalStorage(LS_KEYS.AV_KEY, avKey, setAVKey, \"demo\");\n\t\thandleLocalStorage(LS_KEYS.QUOTES, quotes, setQuotes, INIT_QUOTES);\n\t\thandleLocalStorage(LS_KEYS.XRS, xrs, setXRs, INIT_XRS);\n\t\thandleLocalStorage(LS_KEYS.FOLIOS, folios, setFolios, INIT_FOLIOS);\n\t}, [\n\t\t// portfolios,\n\t\tfolios,\tbaseCurrency, currencies, avKey, quotes, xrs]);\n\n\tconst [ticks, setTicks] = React.useState(0);\n\n\tuseInterval(() => {\n\t\tsetTicks(ticks + 1)\n\t}, 15000);\n\n\tReact.useEffect(() => {\n\t\t// console.log(ticks)\n\t\tlet updateFired = false;\n\t\tfor (const folio of folios) {\n\t\t\tfor (const stock of folio) {\n\t\t\t\tconst quote = getQuote(stock.symbol);\n\t\t\t\tif (quote.lastUpdate + UPDATE_DURATION < Date.now()) {\n\t\t\t\t\tfetchQuote(stock.symbol)\n\t\t\t\t\tupdateFired = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tconst xr = getXR(stock.currency);\n\t\t\t\tif (xr.lastUpdate + UPDATE_DURATION < Date.now()) {\n\t\t\t\t\t//console.log(stock.currency, xr);\n\t\t\t\t\tfetchXR(stock.currency);\n\t\t\t\t\tupdateFired = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (updateFired) { break; }\n\t\t}\n\t}, [ticks])\n\n\tconst getQuote = itemGetter(quotes, setQuotes, { tradeDate: \"\", price: 0, lastUpdate: 0 })\n\tconst getXR = itemGetter(xrs, setXRs, { xrDate: \"\", xr: 0, lastUpdate: 0 })\n\n\tconst fetchQuote = (ticker) => {\n\t\tif (ticker.endsWith(\".SI\")) {\n\t\t\tfetchSGXSecuritiesPrices();\n\t\t} else {\n\t\t\tfetchAVQuote(ticker);\n\t\t}\n\t}\n\n\tconst fetchAVQuote = (ticker) => {\n\t\tconst avUrl = \"https://www.alphavantage.co/query?function=GLOBAL_QUOTE&symbol=\" + ticker + \"&apikey=\" + avKey;\n\t\tfetch(avUrl)\n\t\t\t.then(res => res.json())\n\t\t\t.then(res => {\n\t\t\t\tif (typeof res[\"Global Quote\"] !== \"undefined\") {\n\t\t\t\t\tconst newQuotes = Object.assign({}, quotes);\n\t\t\t\t\tif (typeof newQuotes[ticker] === \"undefined\") { newQuotes[ticker] = {} }\n\t\t\t\t\tnewQuotes[ticker].tradeDate = res[\"Global Quote\"][\"07. latest trading day\"];\n\t\t\t\t\tnewQuotes[ticker].price = res[\"Global Quote\"][\"05. price\"];\n\t\t\t\t\tnewQuotes[ticker].lastUpdate = Date.now()\n\t\t\t\t\tsetQuotes(newQuotes);\n\t\t\t\t}\n\t\t\t})\n\t}\n\n\tconst fetchSGXSecuritiesPrices = () => {\n\t\tconst sgxUrl = \"https://api.sgx.com/securities/v1.1?excludetypes=bonds&params=nc%2Cadjusted-vwap%2Cbond_accrued_interest%2Cbond_clean_price%2Cbond_dirty_price%2Cbond_date%2Cb%2Cbv%2Cp%2Cc%2Cchange_vs_pc%2Cchange_vs_pc_percentage%2Ccx%2Ccn%2Cdp%2Cdpc%2Cdu%2Ced%2Cfn%2Ch%2Ciiv%2Ciopv%2Clt%2Cl%2Co%2Cp_%2Cpv%2Cptd%2Cs%2Csv%2Ctrading_time%2Cv_%2Cv%2Cvl%2Cvwap%2Cvwap-currency\";\n\t\tfetch(sgxUrl, {\n\t\t\t\"headers\": {\n\t\t\t\t\"accept\": \"*/*\",\n\t\t\t\t\"accept-language\": \"en,en-GB;q=0.9,en-US;q=0.8\",\n\t\t\t\t//   \"cache-control\": \"no-cache\",\n\t\t\t\t//   \"pragma\": \"no-cache\",\n\t\t\t\t//   \"sec-fetch-dest\": \"empty\",\n\t\t\t\t//   \"sec-fetch-mode\": \"cors\",\n\t\t\t\t//   \"sec-fetch-site\": \"same-site\",\n\t\t\t\t//   \"sec-gpc\": \"1\"\n\t\t\t},\n\t\t\t\"referrer\": \"https://www.sgx.com/\",\n\t\t\t\"referrerPolicy\": \"strict-origin-when-cross-origin\",\n\t\t\t\"body\": null,\n\t\t\t\"method\": \"GET\",\n\t\t\t\"mode\": \"cors\",\n\t\t\t\"credentials\": \"omit\"\n\t\t})\n\t\t\t.then(res => res.json())\n\t\t\t.then(securities => {\n\t\t\t\tconst newQuotes = Object.assign({}, quotes)\n\t\t\t\tfor (const [ticker, quote] of Object.entries(newQuotes)) {\n\t\t\t\t\tif (!ticker.endsWith(\".SI\")) { continue; }\n\t\t\t\t\tconst lookup = ticker.replace(\".SI\", \"\");\n\t\t\t\t\tconst sgxQuote = securities.data.prices.find(elem => elem.nc == lookup);\n\t\t\t\t\tconst ltd = sgxQuote.trading_time.slice(0, 4) + \"-\" +\n\t\t\t\t\t\tsgxQuote.trading_time.slice(4, 6) + \"-\" +\n\t\t\t\t\t\tsgxQuote.trading_time.slice(6, 8)\n\t\t\t\t\tquote.tradeDate = ltd;\n\t\t\t\t\tquote.price = sgxQuote.lt\n\t\t\t\t\tquote.lastUpdate = Date.now()\n\t\t\t\t}\n\t\t\t\tsetQuotes(newQuotes);\n\t\t\t})\n\t}\n\n\tconst fetchXR = (targetCurrency) => {\n\t\tif (baseCurrency === targetCurrency) {\n\t\t\tconst newXRs = Object.assign({}, xrs);\n\t\t\tif (typeof newXRs[targetCurrency] === \"undefined\") { newXRs[targetCurrency] = {} }\n\t\t\tnewXRs[targetCurrency].xrDate = (new Date()).toISOString();\n\t\t\tnewXRs[targetCurrency].xr = 1\n\t\t\tnewXRs[targetCurrency].lastUpdate = Date.now()\n\t\t\tsetXRs(newXRs);\n\t\t} else {\n\t\t\tconst avUrl = \"https://www.alphavantage.co/query?function=CURRENCY_EXCHANGE_RATE&from_currency=\" + targetCurrency + \"&to_currency=\" + baseCurrency + \"&apikey=\" + avKey\n\t\t\tfetch(avUrl)\n\t\t\t\t.then(res => res.json())\n\t\t\t\t.then(res => {\n\t\t\t\t\tif (typeof res[\"Realtime Currency Exchange Rate\"] !== \"undefined\") {\n\t\t\t\t\t\tconst newXRs = Object.assign({}, xrs);\n\t\t\t\t\t\tif (typeof newXRs[targetCurrency] === \"undefined\") { newXRs[targetCurrency] = {} }\n\t\t\t\t\t\tnewXRs[targetCurrency].xrDate = res[\"Realtime Currency Exchange Rate\"][\"6. Last Refreshed\"];\n\t\t\t\t\t\tnewXRs[targetCurrency].xr = res[\"Realtime Currency Exchange Rate\"][\"5. Exchange Rate\"];\n\t\t\t\t\t\tnewXRs[targetCurrency].lastUpdate = Date.now()\n\t\t\t\t\t\tsetXRs(newXRs);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t}\n\t}\n\n\tconst [source, setSource] = React.useState({});\n\tconst [sourceOpen, setSourceOpen] = React.useState(false);\n\n\tconst handleSourceOpen = () => {\n\t\tsetSource({\n\t\t\t// portfolios,\n\t\t\tbaseCurrency,\n\t\t\tcurrencies,\n\t\t\tavKey,\n\t\t\tfolios\n\t\t});\n\t\tsetSourceOpen(true);\n\t};\n\n\tconst handleSourceClose = () => {\n\t\tsetSourceOpen(false);\n\t};\n\n\tconst handleSourceSave = (newSource) => {\n\t\t// let maxId = Number.MIN_SAFE_INTEGER;\n\t\t// newSource.portfolios.forEach((portfolio) => {\n\t\t// \tportfolio.forEach((stock) => {\n\t\t// \t\tif (typeof stock.id === \"number\" && stock.id > maxId) { maxId = stock.id };\n\t\t// \t})\n\t\t// })\n\t\t// if (maxId < 0) { maxId = 0; }\n\t\t// for (const portfolio of newSource.portfolios) {\n\t\t// \tfor (const stock of portfolio) {\n\t\t// \t\tif (typeof stock.id === \"undefined\") {\n\t\t// \t\t\tstock.id = maxId;\n\t\t// \t\t\tmaxId++;\n\t\t// \t\t}\n\t\t// \t}\n\t\t// }\n\t\tsetFolios(newSource.folios)\n\t\t// setPortfolios(newSource.portfolios)\n\t\tsetBaseCurrency(newSource.baseCurrency)\n\t\tsetCurrencies(newSource.currencies)\n\t\tsetAVKey(newSource.avKey)\n\t\tsetSource(newSource);\n\t\tsetSourceOpen(false)\n\t};\n\n\t// const [stockToEdit, setStockToEdit] = React.useState({});\n\t// const [stockOpen, setStockOpen] = React.useState(false);\n\n\t// const handleStockAdd = (portId) => {\n\t// \tconst stock = { portId, buyDate: (new Date()).toISOString().slice(0, 10) }\n\t// \tsetStockToEdit(stock);\n\t// \tsetStockOpen(true);\n\t// }\n\n\tconst handleFolioChange = (folioIndex, newFolio) => {\n\t\tconst newFolios = folios.map((folio, index) => {\n\t\t\tif(index === folioIndex){\n\t\t\t\treturn newFolio;\n\t\t\t}else{\n\t\t\t\treturn folio;\n\t\t\t}\n\t\t})\n\t\tsetFolios(newFolios);\n\t}\n\n\t// const handleStockSave = (folioId, newStock) => {\n\t// \tconst folio = folios[folioId];\n\t// \tconsole.log(folioId)\n\t// \tconst oldStock = folio.find(stock => stock.symbol == newStock.symbol)\n\t// \tif(typeof oldStock === \"undefined\"){\n\t// \t\tfolio.push(newStock);\n\t// \t}else{\n\t// \t\toldStock.name = newStock.name;\n\t// \t\toldStock.currency = newStock.currency;\n\t// \t}\n\t// \tsetFolios(folios);\n\t// }\n\n\t// const handleStockDelete = (stock) => {\n\t// \t// const newPortfolios = [];\n\t// \t// for (const portfolio of portfolios) {\n\t// \t// \tlet replaceIndex = null;\n\t// \t// \tfor (const [index, oldStock] of portfolio.entries()) {\n\t// \t// \t\tif (oldStock.id === stock.id) {\n\t// \t// \t\t\treplaceIndex = index;\n\t// \t// \t\t\tconsole.log(\"delete\", replaceIndex, stock)\n\t// \t// \t\t\tbreak;\n\t// \t// \t\t}\n\t// \t// \t}\n\t// \t// \tif (replaceIndex !== null) {\n\t// \t// \t\tportfolio.splice(replaceIndex, 1);\n\t// \t// \t}\n\t// \t// \tnewPortfolios.push(portfolio);\n\t// \t// }\n\t// \t// setPortfolios(newPortfolios);\n\t// \t// setStockOpen(false);\n\t// }\n\n\t// const handleStockClose = () => {\n\t// \tsetStockOpen(false);\n\t// };\n\n\t// const displayPortfolios = [];\n\t// for (const [index, portfolio] of portfolios.entries()) {\n\t// \tdisplayPortfolios.push(\n\t// \t\t<Portfolio key={index} portId={index} data={portfolio}\n\t// \t\t\tquotes={quotes} xrs={xrs} onEdit={handleStockEdit}\n\t// \t\t\tonAdd={handleStockAdd.bind(null, index)} />\n\t// \t)\n\t// }\n\n\tconst folioArray = [];\n\tfor (const [index, folio] of folios.entries()) {\n\t\tfolioArray.push(\n\t\t\t<Folio key={index} folio={folio}\n\t\t\t\tquotes={quotes} xrs={xrs} baseCurrency={baseCurrency}\n\t\t\t\tcurrencies={currencies} onChange={handleFolioChange.bind(this,index)}\n\t\t\t/>\n\t\t)\n\t}\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t{folioArray}\n\t\t\t<Button onClick={handleSourceOpen}>Access Source</Button>\n\t\t\t<SourceDialog open={sourceOpen} onClose={handleSourceClose}\n\t\t\t\tonSave={handleSourceSave} source={source} />\n\t\t\t{/* <StockDialog open={stockOpen} onClose={handleStockClose}\n\t\t\t\tstock={stockToEdit} currencies={currencies}\n\t\t\t\tonSave={handleStockSave} onDelete={handleStockDelete} /> */}\n\t\t\t<Container>\n\t\t\t\t<pre style={{ whiteSpace: \"pre-wrap\" }}>{JSON.stringify(folios, null, \"\\t\")}</pre>\n\t\t\t</Container>\n\t\t</React.Fragment>\n\t);\n}\n","import{ useEffect, useRef } from 'react';\r\n\r\nexport default function useInterval(callback, delay) {\r\n    const savedCallback = useRef();\r\n\r\n    // Remember the latest callback.\r\n    useEffect(() => {\r\n        savedCallback.current = callback;\r\n    }, [callback]);\r\n\r\n    // Set up the interval.\r\n    useEffect(() => {\r\n        function tick() {\r\n            savedCallback.current();\r\n        }\r\n        if (delay !== null) {\r\n            let id = setInterval(tick, delay);\r\n            return () => clearInterval(id);\r\n        }\r\n    }, [delay]);\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nReactDOM.render(\n  <React.StrictMode>\n    <CssBaseline />\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log);\n"],"sourceRoot":""}